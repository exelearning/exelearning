/**
 * plugin.min.js
 *
 * Released under Attribution-ShareAlike 4.0 International License.
 * Author: Ignacio Gros (http://gros.es/) for http://exelearning.net/
 *
 * License: http://creativecommons.org/licenses/by-sa/4.0/
 *
 * The use of this plugin is no longer recommended. You can paste or type LaTeX code directly in the text editor.
 */

/**
 * Paste mathematical markup
 * Don't forget to add some styles to theme/site so the code has the same appearance everywhere (see eXe's base.css file)
 */
tinymce.PluginManager.add('pastemath', function (editor, url) {

    function setDialogStyle() {
        let divDialog = $('div.tox-dialog').eq(0);
        tinymce.DOM.setStyles(divDialog, { 'max-width': 600 });
        
        let divBody = $('div.tox-dialog__body').eq(0);
        tinymce.DOM.setStyles(divBody, { 'display': 'grid', 'grid-template-columns': '1fr' });

        let divNavbar = $('div.tox-dialog__body-nav').eq(0);
        tinymce.DOM.removeClass(divNavbar, 'tox-dialog__body-nav');
        tinymce.DOM.setStyle(divNavbar, 'margin-top', 10);
        
        for (let i = 0; i < divNavbar.children().length; i++) {
            tinymce.DOM.setStyles(divNavbar.children().eq(i), { 'margin-left': 20 });
        }
        
        let divBodyContent = $('div.tox-dialog__body-content').eq(0);
        tinymce.DOM.setStyles(divBodyContent, { 'max-height': 300 });
        tinymce.DOM.setStyles(divBodyContent, { 'max-width': 600 });
        
        tinymce.DOM.hide(divNavbar.children().eq(0)); // Hide general tab
        tinymce.DOM.hide(divNavbar.children().eq(1)); // Hide help tab
    }

    function setGeneralAttribsAndHide() {

        let tabPanel = $('div.tox-dialog__body-content').eq(0);
        tinymce.DOM.setAttrib(tabPanel, 'id', 'PasteMathDialogA');

        let divMain = $('div.tox-form').eq(0);

        let divCodeVsImg = divMain.children().eq(0);

        tinymce.DOM.setStyles(divCodeVsImg, { 'display': 'flex', 'margin-top': 5 });
        tinymce.DOM.setStyles(divCodeVsImg.children().eq(0), { 'min-width': 180, 'padding': '8px 0' });
        tinymce.DOM.setStyles(divCodeVsImg.children().eq(1), { 'display': 'flex', 'width': '100%' });
        tinymce.DOM.hide(divCodeVsImg);

        let divMathJax = divMain.children().eq(1);
        tinymce.DOM.setAttrib(divMathJax, { 'id': 'mathjax-l' });
        let checkboxMathJax = divMathJax.children().eq(0);
        tinymce.DOM.setAttrib(checkboxMathJax, { 'id': 'mathjax' });
        tinymce.DOM.hide(divMathJax);

        let divIncludeImage = divMain.children().eq(2);
        tinymce.DOM.setAttrib(divIncludeImage, { 'id': 'includeImage-l' });
        let checkboxIncludeImage = divIncludeImage.children().eq(0);
        tinymce.DOM.setAttrib(checkboxIncludeImage, { 'id': 'includeImage' });
        tinymce.DOM.hide(divIncludeImage);

        let divImgAlt = divMain.children().eq(3);
        let labelImgAlt = divImgAlt.children().eq(0);
        let inputImgAlt = divImgAlt.children().eq(1);
        tinymce.DOM.setAttrib(labelImgAlt, { 'id': 'imgAlt-l' });
        tinymce.DOM.setAttrib(inputImgAlt, { 'id': 'imgAlt' });
        tinymce.DOM.hide(divImgAlt);

        let inputSrc = divMain.children().eq(4);
        tinymce.DOM.hide(inputSrc);

        let labelMathCode = divMain.children().eq(5);
        tinymce.DOM.setAttrib(labelMathCode, { 'id': 'mathCodeInstructions' });

        let textareaMathCode = divMain.children().eq(6).children().eq(0);
        tinymce.DOM.setAttrib(textareaMathCode, { 'id': 'mathCode' });

        // tinymce.DOM.setStyles(textareaHtmlSource, { 'min-height': 200 s});

        var labelA = jQuery("#mathjax-l").children().eq(2);
        labelA.html(labelA.html().replace("mathjax.org", "<a href='https://www.mathjax.org/' target='_blank' style='text-decoration:underline'>mathjax.org</a>"));

        var labelB = jQuery("#mathCodeInstructions");
        labelB.html(labelB.html().replace("eXeMathEditor", "<a href='#' onclick='PasteMathDialog.mathEditor.start();return false' style='text-decoration:underline;cursor:pointer'>Editor LaTeX</a>").replace("(LaTeX...)", "(" + PasteMathDialog.acceptedLanguages + ")"));

    }

    function setHelpAttribs() {

        let tabPanel = $('div.tox-dialog__body-content').eq(0);
        tinymce.DOM.setAttrib(tabPanel, 'id', 'PasteMathDialogB');

        var tabB = jQuery("#PasteMathDialogB");
        tabB.html(tabB.html().replace("(LaTeX...)", "(" + PasteMathDialog.acceptedLanguages + ")"));
        tabB.html(tabB.html().replace("eXeMathEditor", "<a href='#' onclick='PasteMathDialog.mathEditor.start();return false' style='text-decoration:underline;cursor:pointer'>editor_latex</a>").replace("(LaTeX...)", "(" + PasteMathDialog.acceptedLanguages + ")"));
    }

    PasteMathDialog = {

        actualUse: 'code',
        actualMathjax: true,
        actualIncludeImage: true,
        actualImgAlt: '',
        actualMathCode: '',

        getInitialData: function () {

            let data = {
                use: this.actualUse || "code",
                mathjax: this.actualMathjax || false,
                includeImage: this.actualIncludeImage || false,
                imgAlt: this.actualImgAlt || "",
                mathCode: this.actualMathCode || ""
            }

            return data;
        },

        setDefaultData: function () {
            this.actualUse = 'code';
            this.actualMathjax = true;
            this.actualIncludeImage = true;
            this.actualImgAlt = '';
            this.actualMathCode = '';
        },

        acceptedLanguages: "LaTeX",
        // To do: acceptedLanguages : "LaTeX, MathML",

        // Load the previous values (if needed)
        getValues: function () {

            var editor = tinyMCE.activeEditor;

            if (!parent || typeof (jQuery) == 'undefined') {
                return false;
            }

            // Check if it's math code

            var n = editor.selection.getNode();
            top.nodete = n;
            var dom = editor.dom;

            if (n.nodeName == 'IMG') {

                var step1 = n.parentNode;

                if (step1 && step1.nodeName == "P" && dom.getAttrib(step1, 'class').indexOf("exe-math-img") != -1) {

                    // Code and image (recommended)

                    var step2 = step1.parentNode;
                    if (step2 && step2.nodeName == "DIV" && step2.className.indexOf("exe-math ") != -1) {

                        // "Globals"
                        this.isMathBlock = true;
                        this.mathBlock = step2;

                        // Get the original code
                        var htmlSource = jQuery(".exe-math-code", step2).html();
                        this.htmlSource = htmlSource;
                        $("#mathCode").html(htmlSource);
                    }
                } else {

                    // Check if the image was created using the old plugin (exemath)

                    var img = jQuery(n);
                    var exe_math_latex = img.attr("exe_math_latex");

                    if (exe_math_latex && exe_math_latex != "") {
                        editor.windowManager.confirm(_('That image was created using the old formula editor.') + "\n" + _('Make it compatible with the new editor?'), function (s) {
                            if (s) {

                                jQuery.ajax({
                                    type: "GET",
                                    url: exe_math_latex,
                                    success: function (res) {

                                        // We've got the code, so we set the right values

                                        // "Globals"
                                        this.isMathBlock = true;
                                        this.mathBlock = n;

                                        // Get the original code
                                        this.htmlSource = res;
                                        $("#mathCode").html(res);

                                        editor.windowManager.alert(_('Done!'));

                                    },
                                    error: function () {
                                        editor.windowManager.alert(_('No source code found.'), function () {
                                            editor.windowManager.close();
                                        });
                                    }
                                });

                            } else {

                                editor.windowManager.close();

                            }
                        });
                    }

                }

            } else if (n.nodeName == 'DIV' || n.nodeName == 'SPAN') {

                var c = n.className;

                if (c.indexOf("exe-math") != -1) {

                    // Code without image                

                    // "Globals"
                    this.isMathBlock = true;
                    this.mathBlock = n;

                    // Get the original code
                    let htmlSource = $(n).text();
                    // win.find("#mathCode").value(htmlSource);
                    PasteMathDialog.actualMathCode = htmlSource;

                    PasteMathDialog.actualIncludeImage = false;
                    $("#mathCode").html(htmlSource);

                }

            } else {
                // Get the selected contents as text and place it in the input
                $("#mathCode").html(editor.selection.getContent({ format: 'text' }));
                PasteMathDialog.actualMathCode = editor.selection.getContent({ format: 'text' });
            }

        },

        mathEditor: {
            isWarned: false,
            start: function () {
                PasteMathDialog.mathEditor.field = jQuery("#mathCode");
                if (PasteMathDialog.mathEditor.isWarned == false) {
                    var extra = _("You should save a copy of the code before continuing.") + '\n\n';
                    if (PasteMathDialog.mathEditor.field.value == "") extra = "";
                    editor.windowManager.confirm(_("Click on the Editor's Save button when you finish editing."), function (s) {
                        if (s) {
                            PasteMathDialog.mathEditor.isWarned = true;
                            PasteMathDialog.mathEditor.start();
                        }
                    });
                    return false;
                }
                var mypage = "app/common/editor_latex/index.html";
                var myname = _("Equation Editor");
                var w = 983;
                var features = "titlebar=no,toolbar=no,location=no,status=no,menubar=no,scrollbars=no,resizable=no";
                var h = 418;
                var win = null;
                var winl = (screen.width - w) / 2;
                var wint = (screen.height - h) / 2;
                if (winl < 0) winl = 0;
                if (wint < 0) wint = 0;
                var settings = 'height=' + h + ',';
                settings += 'width=' + w + ',';
                settings += 'top=' + wint + ',';
                settings += 'left=' + winl + ',';
                settings += features;
                win = window.open(mypage, myname, settings);
                win.window.focus();
            }
        },

        getMathBlockClass : function(code){
            var type = PasteMathDialog.actualUse;
            var k = "exe-math show-"+type;
                k += " exe-math-engine";
            let c = code.trim();
            if (c.indexOf("\\(")==0||(c.indexOf("$")==0&&c.indexOf("$$")!=0)) {
                k += " exe-math-inline";
            }
            var position = "position-center";
            if (this.isMathBlock) {
                // Respect the alignment
                var klass = jQuery(this.mathBlock).attr("class");
                if (klass.indexOf(" position-left")!=-1) position = "position-left";
                else if (klass.indexOf(" position-right")!=-1) position = "position-right";
                else if (klass.indexOf(" float-left")!=-1) position = "float-left";
                else if (klass.indexOf(" float-right")!=-1) position = "float-right";
            }
            k += " "+position;
            return k;
        },

        insertMath : function(code) {
            
            var editor = tinyMCE.activeEditor;
            var content = "<span class='exe-math-code'>"+code+"</span>";
            var cssClass = this.getMathBlockClass(code);
            
            if (this.isMathBlock) {
                
                // Update the class and the HTML
                jQuery(this.mathBlock).attr("class",cssClass).html(content);
                
            } else {
                
                // Insert a new block
                content = "<span class='"+cssClass+"'>" + content + "</span>";
                if (cssClass.indexOf("exe-math-inline")==-1) content = "<p>"+content+"</p><p>...</p>";
                else content += " ";
                editor.execCommand('mceInsertContent', false, content);
                
            }
            
            editor.windowManager.close();
        },

        // Create or update the content
        insert: function (content) {

            var editor = tinyMCE.activeEditor;
            // var content = win.find("#mathCode").value();

            if (content == "") {
                editor.windowManager.alert(_('Please write the code'));
                return false;
            }

            this.mathCode = content;
            // var type = win.find("#use").value();
            var type = PasteMathDialog.actualUse;
            this.preloader.show();

            if (type == "code") {

                // Insert code without image
                this.insertMath(content);
                return false;

            } else {

                // Create the image, but ask for confirmation if it has no alternative text
                // var alt = win.find('#imgAlt').value();
                var alt = PasteMathDialog.actualImgAlt;
                if (alt == "") {
                    editor.windowManager.confirm(
                        _('Continue without a title? Some users might see an image instead of the rendered code. Without the title the image may not be accessible to them.'),
                        function (s) {
                            if (s) {

                                PasteMathDialog.createMathImage("src", content);

                            } else {

                                PasteMathDialog.preloader.hide();

                            }
                        }
                    );
                } else {
                    PasteMathDialog.createMathImage("src", content);
                }

            }

        },

        preloader: {
            show: function () {
                var panelA = jQuery("#PasteMathDialogA");
                jQuery("div", panelA).each(function (i) {
                    if (i == 0) this.style.background = "#FFF url(" + PasteMathDialog.baseURL + "/img/loading.gif) no-repeat 50% 50%";
                    else jQuery(this).hide();
                });
                jQuery("label", panelA).hide();
                jQuery("textarea", panelA).hide();
            },
            hide: function () {
                var panelA = jQuery("#PasteMathDialogA");
                jQuery("div", panelA).each(function (i) {
                    if (i == 0) this.style.background = "";
                    else jQuery(this).show();
                });
                jQuery("label", panelA).show();
                jQuery("textarea", panelA).show();
            }
        },

        // Disable/Enable the image options
        toggleType: function (val) {

            var fields = jQuery("#mathjax,#includeImage");
            var labels = jQuery("#mathjax-l,#includeImage-l");
            var imgField = jQuery("#imgAlt");
            var imgLabel = jQuery("#imgAlt-l");

            imgField.prop("disabled", false).css("opacity", 1);
            imgLabel.css("opacity", 1)

            if (val == "image") {
                fields.prop("disabled", "disabled").css("opacity", 0.2);
                labels.css("opacity", 0.2);
            } else {
                fields.prop("disabled", false).css("opacity", 1);
                labels.css("opacity", 1);
                // if (!win.find("#includeImage").checked()) {
                if (!PasteMathDialog.actualIncludeImage) {
                    imgField.prop("disabled", "disabled").css("opacity", 0.2);
                    imgLabel.css("opacity", 0.2);
                }
            }

        },

        // Disable/Enable the alternative text field
        toggleAlt: function (checked) {
            var field = jQuery("#imgAlt");
            var label = jQuery("#imgAlt-l");

            if (!checked) {
                field.prop("disabled", "disabled").css("opacity", 0.2);
                label.css("opacity", 0.2);
            } else {
                field.prop("disabled", false).css("opacity", 1);
                label.css("opacity", 1);
            }
        },

        openDialog: function () {

            PasteMathDialog.getValues();

            // Open the window and load the previous values
            win = editor.windowManager.open({
                title: _('Paste mathematical markup'),
                body: {
                    type: 'tabpanel',
                    tabs: [
                        {
                            title: _('General'),
                            // id: 'PasteMathDialogA',
                            // type: 'form',
                            name: 'PasteMathDialogA',
                            // pack: 'start',
                            items: [

                                {
                                    type: 'listbox',
                                    // minWidth: 150,
                                    name: 'use',
                                    label: _('Choose what to use:'),
                                    items: [
                                        { text: _('Code') + ' (' + _('recommended') + ')', value: 'code' },
                                        { text: _('Image'), value: 'image' }
                                    ],
                                    // onselect: function () {
                                    //     PasteMathDialog.toggleType(this.value());
                                    // }
                                },
                                {
                                    // id: 'mathjax',
                                    type: 'checkbox',
                                    name: 'mathjax',
                                    // checked: true,
                                    label: _('Use MathJax from mathjax.org (online only) or your own copy')
                                },
                                {
                                    // id: 'includeImage',
                                    type: 'checkbox',
                                    name: 'includeImage',
                                    // checked: true,
                                    label: _('Include alternative image (recommended)'),
                                    // onchange: function () {
                                    //     PasteMathDialog.toggleAlt(this.checked());
                                    // }
                                },
                                {
                                    type: 'input',
                                    // id: 'imgAlt',
                                    name: 'imgAlt',
                                    label: _('Image title (alternative text):')
                                },
                                {
                                    type: 'input',
                                    name: 'src',
                                    // visible: false
                                },
                                {
                                    type: 'label',
                                    // id: 'mathCodeInstructions',
                                    label: _('Paste (CTRL+V) the code (LaTeX...) from your favorite editor or use eXeMathEditor'),
                                    // forId: 'mathCode'
                                    items: []
                                },
                                {
                                    type: 'textarea',
                                    // id: 'mathCode',
                                    name: 'mathCode',
                                    // multiline: true,
                                    // minHeight: 100
                                }

                            ]
                        },

                        {
                            title: _('Important'),
                            // id: 'PasteMathDialogB',
                            name: 'PasteMathDialogB',
                            // type: 'form',
                            // pack: 'start',
                            items: [
                                {
                                    type: 'htmlpanel',
                                    html: '<p>'+ _("The use of this plugin is no longer recommended. You can paste or type LaTeX code directly in the text editor.") + '</p>'
                                }
                            ]
                        }

                    ]
                },
                buttons: [
                    {
                        type: 'cancel',
                        name: 'cancel',
                        text: 'Cancel'
                    },
                    {
                        type: 'submit',
                        name: 'save',
                        text: 'Save',
                        primary: true
                    }
                ],
                size: 'medium',
                initialData: PasteMathDialog.getInitialData(),
                onTabChange: function (api, details) {
                    switch (details.newTabName) {
                        case 'PasteMathDialogA':
                            setGeneralAttribsAndHide();
                            PasteMathDialog.toggleType(PasteMathDialog.actualUse);
                            if (PasteMathDialog.actualUse == 'code') {
                                PasteMathDialog.toggleAlt(PasteMathDialog.actualIncludeImage);
                            }
                            break;
                        case 'PasteMathDialogB':
                            setHelpAttribs();
                            break;
                    }
                },
                onChange: function (api, details) {
                    switch (details.name) {
                        case 'use':
                            PasteMathDialog.actualUse = api.getData().use;
                            PasteMathDialog.toggleType(PasteMathDialog.actualUse);
                            if (PasteMathDialog.actualUse == 'code') {
                                PasteMathDialog.toggleAlt(PasteMathDialog.actualIncludeImage);
                            }
                            break;
                        case 'mathjax':
                            PasteMathDialog.actualMathjax = api.getData().mathjax;
                            break;
                        case 'includeImage':
                            PasteMathDialog.actualIncludeImage = api.getData().includeImage;
                            PasteMathDialog.toggleAlt(PasteMathDialog.actualIncludeImage);
                            break;

                    }
                },
                onSubmit: function (api) {
                    PasteMathDialog.actualImgAlt = api.getData().imgAlt;
                    PasteMathDialog.actualMathCode = api.getData().mathCode.replaceAll("\\begin{equation}","").replaceAll("\\end{equation}", "");

                    // Insert content when the window form is submitted
                    // PasteMathDialog.insert(e.data.htmlSource);
                    PasteMathDialog.insert(PasteMathDialog.actualMathCode);
                    return false;
                },
                onClose: function () {
                    PasteMathDialog.setDefaultData();
                }
            });

            setDialogStyle();
            setGeneralAttribsAndHide();
            
            // Legacy warning
            editor.windowManager.alert(_("The use of this plugin is no longer recommended. You can paste or type LaTeX code directly in the text editor."));

            PasteMathDialog.toggleType(PasteMathDialog.actualUse);
            PasteMathDialog.toggleAlt(PasteMathDialog.actualIncludeImage);

        }, // / openDialog

        activateButton: function (node) {
            var activate = false;
            var step1 = node.parentNode;
            if (node.nodeName == 'IMG') {
                if (step1 && step1.nodeName == "P" && editor.dom.getAttrib(step1, 'class').indexOf("exe-math-img") != -1) {
                    // Code and image (recommended)
                    var step2 = step1.parentNode;
                    if (step2 && step2.nodeName == "DIV" && step2.className.indexOf("exe-math ") != -1) {
                        activate = true;
                    }
                } else {
                    // Check if the image was created using the old plugin (exemath)
                    var img = jQuery(node);
                    var exe_math_latex = img.attr("exe_math_latex");
                    if (exe_math_latex && exe_math_latex != "") {
                        activate = true;
                    }
                }
            } else if (node.nodeName == 'DIV') {
                var c = node.className;
                if (c.indexOf("exe-math") != -1 && c.indexOf("code-only") != -1) {
                    activate = true;
                }
            } else if (node.nodeName == 'P') {
                if (step1 && step1.nodeName == "DIV" && editor.dom.getAttrib(step1, 'class').indexOf("exe-math") != -1) {
                    activate = true;
                }
            }
            return activate;
        } // / activateButton

    } // PasteMathDialog    

    editor.ui.registry.addIcon('pastemath', `
    <?xml version="1.0" encoding="utf-8"?>
    <!-- Generator: Adobe Illustrator 16.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->
    <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
    <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
         width="24px" height="24px" viewBox="0 0 24 24" enable-background="new 0 0 24 24" xml:space="preserve">
    <desc>Created with Sketch.</desc>
    <polygon points="18.198,8.547 18.198,6.547 6.198,6.547 6.198,8.532 6.185,8.546 10.896,12.418 6.198,16.527 6.216,16.547 
        6.198,16.547 6.198,18.547 18.198,18.547 18.198,16.547 10.133,16.547 13.383,13.575 14.764,12.366 12.956,10.831 12.836,10.721 
        12.83,10.725 10.266,8.547 "/>
    </svg>
    `);

    editor.ui.registry.addToggleButton('pastemath', {
        icon: "pastemath",
        tooltip: _('Paste mathematical markup'),
        onAction: PasteMathDialog.openDialog,
        onSetup: function (buttonApi) {
            var editorEventCallback = function (eventApi) {
                buttonApi.setActive(PasteMathDialog.activateButton(eventApi.element));
            };
            editor.on('NodeChange', editorEventCallback);
            return function (buttonApi) {
                editor.off('NodeChange', editorEventCallback);
            }
        }
    });

    editor.ui.registry.addMenuItem('pastemath', {
        icon: "pastemath",
        text: _('Paste mathematical markup'),
        onAction: PasteMathDialog.openDialog,
        context: 'insert'
    });

    editor.on('init', function (e) {
        editor.dom.loadCSS(url + "/css/content.css");
        PasteMathDialog.baseURL = url;
    });

});
